-- GMP Clearview Daily Costs Analysis 

# Monitor Query costs in BigQuery; standard-sql; 2020-06-21
# @see http://www.pascallandau.com/bigquery-snippets/monitor-query-costs/

DECLARE timezone STRING DEFAULT  'America/Los_Angeles';
DECLARE gb_divisor FLOAT64 DEFAULT 1024*1024*1024; -- 1e+9; 
DECLARE tb_divisor FLOAT64 DEFAULT gb_divisor*1024; --1e+12;
DECLARE cost_per_tb_in_dollar FLOAT64 DEFAULT 6.25;
DECLARE cost_factor FLOAT64 DEFAULT cost_per_tb_in_dollar / tb_divisor;

with query_costs as (
          SELECT creation_time,
          EXTRACT(YEAR from DATETIME(creation_time)) year, 
          EXTRACT(MONTH from DATETIME(creation_time)) month, 
          EXTRACT(DAY from DATETIME(creation_time)) day, 
          EXTRACT(HOUR from DATETIME(creation_time)) hour, 

          project_id, job_id, job_type,
          destination_table.dataset_id, destination_table.table_id, 
          user_email, query,  state,
          error_result,
          (SELECT value FROM UNNEST(labels) WHERE key='dataform_workflow_execution_action_id_name') dataform_action_id,

          SUM(total_bytes_processed)/tb_divisor processed_TB, 
          SUM(IFNULL(total_bytes_billed,0))/tb_divisor  billed_TB,  
          SUM(total_bytes_processed) * cost_factor  as cost_in_dollar
    FROM `region-${dataform.projectConfig.defaultLocation.toLowerCase()}.INFORMATION_SCHEMA.JOBS` 
    WHERE 1=1 --user_email IN ('service-315755463126@gcp-sa-dataform.iam.gserviceaccount.com') --these is default Dataform service account
      -- AND EXTRACT(date FROM creation_time) between '2025-08-14' and  '2025-08-14' 
      and creation_time between TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY) AND CURRENT_TIMESTAMP() --datetime(2025,8,14,13,10,0) and datetime(2025,8,15,13,10,0)
    GROUP by  all 
)


SELECT DISTINCT --creation_time,
  year,  month,day, --hour,
  user_email,    
  -- LEFT(query, 200) query,job_type,

  ROUND(SUM(processed_TB), 4) processed_TB,
  ROUND(SUM(billed_TB), 4) billed_TB,
  cost_per_tb_in_dollar as cost_per_TB,
  ROUND(SUM(cost_in_dollar), 4) total_cost, 
  COUNT(*) invocations,
  ROUND(SUM(cost_in_dollar), 4) / count(*) cost_per_invocation,
  COUNT(distinct job_id) jobs,

  STRING_AGG(DISTINCT dataform_action_id, "|" ORDER BY dataform_action_id) tables,
  CASE WHEN error_result is not NULL THEN "ERROR" 
    elSe "SUCCESS" END AS status

  -- CASE WHEN REGEXP_CONTAINS(query, 'WAM-') THEN "WAM reports"
  -- WHEN REGEXP_CONTAINS(query, 'prod-') THEN "PROD reports"
  -- eLSE 'Other reports'
  -- END notes

FROM query_costs
where 1=1  --table_id is null
AND job_id like 'dataform-gcp-%'  
group by all
ORDER BY month desc, total_cost desc 